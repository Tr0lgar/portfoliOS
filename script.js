class PortfoliOS {
    constructor() {
        // Initialise les propri√©t√©s principales : une liste des fen√™tres et la fen√™tre active
        this.windows = new Map();
        this.activeWindow = null;
        this.initTaskbar();
    }

    // Configure les ic√¥nes de la barre des t√¢ches pour ouvrir des fen√™tres correspondantes
    initTaskbar() {
        document.querySelectorAll('.app-icon').forEach(icon => {
            icon.addEventListener('click', () => {
                const appId = icon.dataset.app;
                this.openWindow(appId);
            });
        });
    }

    // Ouvre une nouvelle fen√™tre ou r√©affiche une fen√™tre existante
    openWindow(appId) {
        const icon = document.querySelector(`.app-icon[data-app="${appId}"]`);

        // Si la fen√™tre existe d√©j√†, elle est remise en avant
        if (this.windows.has(appId)) {
            const win = this.windows.get(appId);
            win.style.display = 'block';
            this.focusWindow(win);
            icon.classList.add('active');
            return;
        }

        // Sinon, cr√©e une nouvelle fen√™tre
        const window = this.createWindow(appId);
        document.body.appendChild(window);
        this.windows.set(appId, window);
        this.focusWindow(window);
        this.makeDraggable(window);
        icon.classList.add('active');
    }

    // Cr√©e un √©l√©ment DOM repr√©sentant une fen√™tre et son contenu
    createWindow(appId) {
        const window = document.createElement('div');
        window.className = 'window';
        window.id = appId;
        window.dataset.appId = appId;
        window.style.width = '600px';
        window.style.height = '400px';
        window.style.left = '50%';
        window.style.top = '50%';
        window.style.transform = 'translate(-50%, -50%)';

        const configs = {
            portfoliOS: { title: 'portfoliOS', color: '#e0e0e0', content: this.createPortfoliOSContent() },
            about: { title: '√Ä Propos', color: '#e0e0e0', content: this.createAboutContent() },
            apps: { title: 'Apps', color: '#e0e0e0', content: this.createAppsContent() },
            settings: { title: 'Param√®tres', color: '#e0e0e0', content: this.createSettingsContent() },
            terminal: { title: 'Terminal', color: '#e0e0e0', content: this.createTerminalContent() },
            contact: { title: 'Contact', color: '#e0e0e0', content: this.createContactContent() }
        };

        const config = configs[appId];
        window.innerHTML = `
            <div class="window-header" id="${appId}" style="background-color: ${config.color}">
                <div class="window-title">
                    <span>${config.title}</span>
                </div>
                <div class="window-controls">
                    <img class="window-button minimize" src="assets/minimize.svg" alt="Minimize">
                    <img class="window-button maximize" src="assets/fullscreen.svg" alt="Fullscreen">
                    <img class="window-button close" src="assets/close.svg" alt="Close">
                </div>
            </div>
            <div class="window-content">
                ${config.content}
            </div>
        `;

        this.initWindowControls(window);
        return window;
    }

    // Cr√©e le contenu pour la fen√™tre "Accueil"
    createPortfoliOSContent() {
        return `
            <h2>portfoliOS</h2>
            <p>
                <strong>Bienvenue sur portfoliOS‚ÄØ!</strong>
            </p>
            <p>
                portfoliOS est une approche unique du portfolio traditionnel. Plut√¥t qu‚Äôune simple page web statique, 
                j‚Äôai imagin√© une exp√©rience interactive inspir√©e de l‚Äôapparence et des fonctionnalit√©s d‚Äôun syst√®me d‚Äôexploitation (OS). 
                C‚Äôest une fa√ßon ludique et cr√©ative de pr√©senter mes projets, mes comp√©tences et ma personnalit√© tout en engageant les visiteurs.
            </p>
            <h3>Qu‚Äôest-ce que portfoliOS‚ÄØ?</h3>
            <p>
                portfoliOS reproduit certaines fonctionnalit√©s cl√©s d‚Äôun syst√®me d‚Äôexploitation, telles que des fen√™tres d√©pla√ßables, 
                une barre des t√¢ches avec des raccourcis d‚Äôapplications, et des applications interactives. Chaque ‚Äúapplication‚Äù repr√©sente une section de mon portfolio‚ÄØ:
            </p>
            <ul>
                <li><strong>√Ä propos :</strong> En savoir plus sur moi et mon parcours (bient√¥t disponible‚ÄØ!).</li>
                <li><strong>Projets :</strong> D√©couvrez mes r√©alisations principales.</li>
                <li><strong>Param√®tres :</strong> Ajustez le th√®me ou personnalisez votre exp√©rience (bient√¥t disponible‚ÄØ!).</li>
                <li><strong>Terminal :</strong> Une fonctionnalit√© exp√©rimentale pour interagir avec le site via une interface en ligne de commande (bient√¥t disponible‚ÄØ!).</li>
                <li><strong>Contact :</strong> Une fa√ßon simple de me contacter (bient√¥t disponible‚ÄØ!).</li>
            </ul>
            <h3>Pourquoi cr√©er un portfolio comme celui-ci‚ÄØ?</h3>
            <p>
                Je voulais repousser les limites de ce qu‚Äôun portfolio pouvait √™tre. En d√©veloppant portfoliOS, j‚Äôai combin√© 
                ma passion pour le d√©veloppement et l‚Äôexp√©rimentation cr√©ative. Mon objectif est de d√©montrer mes comp√©tences techniques tout en offrant une exp√©rience amusante et m√©morable aux visiteurs.
            </p>
            <h3>Technologies utilis√©es</h3>
            <p>
                portfoliOS est d√©velopp√© en utilisant HTML, CSS et JavaScript, sans d√©pendre fortement de frameworks externes. 
                Cela permet de garder le code l√©ger tout en mettant l‚Äôaccent sur les principes fondamentaux du d√©veloppement web. 
                Cependant, au fur et √† mesure de l‚Äô√©volution du projet, je pourrais int√©grer des outils ou frameworks si n√©cessaire.
            </p>
            <p>
                Merci de visiter portfoliOS‚ÄØ! N‚Äôh√©sitez pas √† explorer et √† d√©couvrir mon travail. üòä
            </p>
        `;
    }

    // Cr√©e le contenu pour la fen√™tre "√Ä Propos"
    createAboutContent() {
        return `
            <div class="about-me">
                <img src="images/profile-picture.png" alt="Photo de Mathis" class="profile-photo">
                <h2>üëã Bonjour, je suis Mathis !</h2>
                <p>
                    Passionn√© par les d√©fis, la pr√©cision et les solutions concr√®tes, j‚Äôai d√©couvert le d√©veloppement Web 
                    pendant le confinement COVID-19. Initialement attir√© par la chirurgie, j‚Äôai r√©orient√© ma rigueur scientifique 
                    vers la cr√©ation de solutions digitales. Apr√®s un d√©tour par un cursus en informatique de gestion, j‚Äôai choisi une formation 
                    en d√©veloppement web, plus ax√©e sur la pratique.
                </p>
                <br>
                <p>
                    üí° J'adore apprendre de nouvelles technologies et relever des d√©fis techniques pour am√©liorer mes comp√©tences.
                </p>
                
                <h3>üöÄ Ce que je fais actuellement :</h3>
                <ul>
                    <li>üå± Formation intensive en d√©veloppement Web full stack.</li>
                    <li>üõ†Ô∏è Exploration de technologies modernes : <strong>HTML</strong>, <strong>CSS</strong>, 
                        <strong>JavaScript</strong>, <strong>Node.js</strong>, <strong>React.js</strong>, <strong>Angular</strong>, 
                        <strong>Express</strong>, <strong>MongoDB</strong>.
                    </li>
                    <li>üìö Projets pratiques et collaboratifs pour renforcer mes comp√©tences techniques.</li>
                </ul>
                
                <h3>üß∞ Mes outils et comp√©tences actuels :</h3>
                <ul>
                    <li><strong>Frontend :</strong> HTML5, CSS3, SCSS, JavaScript.</li>
                    <li><strong>Backend :</strong> PHP, Laravel, Java, C#.</li>
                    <li><strong>Bases de donn√©es :</strong> SQL, PostgreSQL.</li>
                    <li><strong>Outils :</strong> Git/GitHub/GitLab, VS Code, suite Jetbrains, Jira, Confluence.</li>
                    <li><strong>M√©thodes de travail :</strong> Agile (SCRUM), gestion de projets collaboratifs, r√©solution de probl√®mes.</li>
                </ul>
                
                <h3>üåç Retrouvez-moi ici :</h3>
                <ul>
                    <li><strong>LinkedIn :</strong> <a href="https://www.linkedin.com/in/mathis-derwael" target="_blank">Mathis Derwael</a></li>
                    <li><strong>GitHub :</strong> <a href="https://github.com/Tr0lgar" target="_blank">GitHub</a></li>
                </ul>
            </div>

        `;
    }

    // Cr√©e le contenu pour la fen√™tre "Projets"
    createAppsContent() {
        const projects = [
            { name: 'MyNyl', logo: 'images/mynyl-light.png', link: 'https://mynyl.netlify.app/' },
            { name: 'GobMouche', logo: 'images/frog.png', link: 'https://tr0lgar.github.io/Kermit/' },
            { name: 'CatFacts', logo: 'images/cat.png', link: 'https://tr0lgar.github.io/RandomCatFacts/' },
            { name: 'portfoliOS', logo: 'images/logo.png', link: 'https://github.com/Tr0lgar/portfoliOS' },
            // Ajouter d'autres projets ici
        ];
    
        const projectItems = projects.map(project => `
            <div class="app-item">
                <a href="${project.link}" target="_blank">
                    <img src="${project.logo}" alt="${project.name}">
                    <span>${project.name}</span>
                </a>
            </div>
        `).join('');
    
        return `
            <div class="app-grid">
                ${projectItems}
            </div>
        `;
    }

    // Cr√©e le contenu pour la fen√™tre "Param√®tres"
    createSettingsContent() {
        return `
            <h2>Param√®tres</h2>
            <p>Work in progress</p>
        `;
    }

    // Cr√©e le contenu pour la fen√™tre "Terminal"
    createTerminalContent() {
        return `
            <div class="terminal">
                <p><span>visitor@portfoliOS:~$</span>Work in progress</p>
            </div>
        `;
    }

    // Cr√©e le contenu pour la fen√™tre "Contact"
    createContactContent() {
        return `
            <form class="contact-form">
                <input type="email" placeholder="Votre email">
                <textarea placeholder="Work in progress" rows="6"></textarea>
                <button type="submit"><a href="https://youtu.be/vXYVfk7agqU" target="_blank">Envoyer</button>
            </form>
        `;
    }

    // Configure les boutons de contr√¥le (fermer, maximiser, minimiser)
    initWindowControls(window) {
        const closeBtn = window.querySelector('.window-button.close');
        const maximizeBtn = window.querySelector('.window-button.maximize');
        const minimizeBtn = window.querySelector('.window-button.minimize');
        const appId = window.dataset.appId;
        const icon = document.querySelector(`.app-icon[data-app="${appId}"]`);
    
        closeBtn.addEventListener('click', () => {
            window.style.display = 'none';
            icon.classList.remove('active');
        });

        maximizeBtn.addEventListener('click', () => {
            const isMaximized = window.classList.toggle('maximized');
            maximizeBtn.src = isMaximized ? 'assets/fullscreen_exit.svg' : 'assets/fullscreen.svg';
        });
    
        minimizeBtn.addEventListener('click', () => {
            window.style.display = 'none';
            icon.classList.add('active');
        });
    
        window.addEventListener('mousedown', () => this.focusWindow(window));
    }

    // Met une fen√™tre en avant en ajustant l'ordre d'affichage
    focusWindow(window) {
        this.windows.forEach(win => {
            win.style.zIndex = '1';
        });
        window.style.zIndex = '10';
        this.activeWindow = window;
    }

    // Rend les fen√™tres d√©pla√ßables
    makeDraggable(window) {
        const header = window.querySelector('.window-header');
        let isDragging = false;
        let startX, startY;

        header.addEventListener('mousedown', (e) => {
            if (window.classList.contains('maximized')) return;
            isDragging = true;
            const rect = window.getBoundingClientRect();
            startX = e.clientX - rect.left;
            startY = e.clientY - rect.top;
            window.style.transition = 'none';
        });

        document.addEventListener('mousemove', (e) => {
            if (!isDragging) return;
            e.preventDefault();
            const x = e.clientX - startX;
            const y = e.clientY - startY;
            window.style.left = `${x}px`;
            window.style.top = `${y}px`;
            window.style.transform = 'none';
        });

        document.addEventListener('mouseup', () => {
            if (isDragging) {
                isDragging = false;
                window.style.transition = '';
            }
        });
    }
}

// Initialisation
const portfoliOS = new PortfoliOS();